[{"D:\\Work\\pokedex\\src\\index.js":"1","D:\\Work\\pokedex\\src\\reportWebVitals.js":"2","D:\\Work\\pokedex\\src\\pages\\App.js":"3","D:\\Work\\pokedex\\src\\components\\Navbar.js":"4","D:\\Work\\pokedex\\src\\API\\api.js":"5","D:\\Work\\pokedex\\src\\components\\PokemonTile.js":"6","D:\\Work\\pokedex\\src\\pages\\PokemonDetail.js":"7","D:\\Work\\pokedex\\src\\components\\LoadingBar.js":"8","D:\\Work\\pokedex\\src\\components\\Badge.js":"9","D:\\Work\\pokedex\\src\\components\\PokemonCatchModal.js":"10","D:\\Work\\pokedex\\src\\pages\\MyPokemonList.js":"11","D:\\Work\\pokedex\\src\\pages\\MyPokemonDetail.js":"12"},{"size":1363,"mtime":1611111039555,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1548,"mtime":1611112203600,"results":"16","hashOfConfig":"14"},{"size":918,"mtime":1611083690968,"results":"17","hashOfConfig":"14"},{"size":702,"mtime":1610782703749,"results":"18","hashOfConfig":"14"},{"size":508,"mtime":1611111391547,"results":"19","hashOfConfig":"14"},{"size":3040,"mtime":1611127947166,"results":"20","hashOfConfig":"14"},{"size":184,"mtime":1610897209780,"results":"21","hashOfConfig":"14"},{"size":235,"mtime":1610901836912,"results":"22","hashOfConfig":"14"},{"size":1070,"mtime":1611082641091,"results":"23","hashOfConfig":"14"},{"size":1180,"mtime":1611133929847,"results":"24","hashOfConfig":"14"},{"size":1995,"mtime":1611112257701,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1i9dnr6",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"D:\\Work\\pokedex\\src\\index.js",[],["53","54"],"D:\\Work\\pokedex\\src\\reportWebVitals.js",[],"D:\\Work\\pokedex\\src\\pages\\App.js",[],"D:\\Work\\pokedex\\src\\components\\Navbar.js",[],"D:\\Work\\pokedex\\src\\API\\api.js",[],"D:\\Work\\pokedex\\src\\components\\PokemonTile.js",[],"D:\\Work\\pokedex\\src\\pages\\PokemonDetail.js",["55"],"import React, { useState } from \"react\";\r\nimport { GET_POKEMON_DETAIL } from \"../API/api\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport LoadingBar from \"../components/LoadingBar\";\r\nimport Badge from \"../components/Badge\";\r\nimport PokemonCatchModal from \"../components/PokemonCatchModal\";\r\n\r\nimport \"../assets/PokemonDetail.css\";\r\nimport pokeball from \"../assets/icons/pokeball.png\";\r\n\r\nconst PokemonDetail = () => {\r\n  const { name } = useParams();\r\n\r\n  const { loading, error, data: pokemonDetail } = useQuery(GET_POKEMON_DETAIL, {\r\n    variables: { name },\r\n    onError: (e) => {\r\n      throw e;\r\n    },\r\n  });\r\n\r\n  const [isPokemonCaught, setIsPokemonCaught] = useState(null);\r\n\r\n  const getRandomSuccess = () => {\r\n    return Math.random() < 0.5;\r\n  };\r\n\r\n  const simulatePokemonCatch = () => {\r\n    setIsPokemonCaught(getRandomSuccess());\r\n  };\r\n\r\n  const hideCatchModal = () => {\r\n    setIsPokemonCaught(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar pageTitle={`Pokémon Detail - ${name}`} />\r\n      {error && `Error! ${error.message}`}\r\n      {loading && (\r\n        <div className=\"pokemon-detail\">\r\n          <LoadingBar />\r\n        </div>\r\n      )}\r\n      {!(error || loading) && (\r\n        <>\r\n          <div className=\"pokemon-detail\">\r\n            <img\r\n              src={pokemonDetail.pokemon.sprites.front_default}\r\n              alt={`${name} Profile`}\r\n            />\r\n            <div className=\"pokemon-detail__box\">\r\n              <p>{name}</p>\r\n              <div className=\"pokemon-detail__badges\">\r\n                {pokemonDetail.pokemon.types.map((type, key) => {\r\n                  return (\r\n                    <Badge\r\n                      key={key}\r\n                      badgeText={type.type.name}\r\n                      tooltip=\"Pokémon Type\"\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"pokemon-detail__badges\">\r\n                {pokemonDetail.pokemon.moves.map((move, key) => {\r\n                  return (\r\n                    <Badge\r\n                      key={key}\r\n                      badgeText={move.move.name}\r\n                      tooltip=\"Pokémon Move\"\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {isPokemonCaught !== null && (\r\n            <div className=\"overlay\">\r\n              <PokemonCatchModal\r\n                pokemon={name}\r\n                isPokemonCaught={isPokemonCaught}\r\n                pokemonDetail={pokemonDetail}\r\n              />\r\n            </div>\r\n          )}\r\n          {(!isPokemonCaught || isPokemonCaught === null) && (\r\n            <div className=\"pokeball-catch\" onClick={simulatePokemonCatch}>\r\n              <img src={pokeball} alt=\"pokeball\" />\r\n              <button>catch</button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonDetail;\r\n","D:\\Work\\pokedex\\src\\components\\LoadingBar.js",[],"D:\\Work\\pokedex\\src\\components\\Badge.js",[],"D:\\Work\\pokedex\\src\\components\\PokemonCatchModal.js",[],"D:\\Work\\pokedex\\src\\pages\\MyPokemonList.js",[],"D:\\Work\\pokedex\\src\\pages\\MyPokemonDetail.js",["56","57"],"import React, { useState } from \"react\";\r\nimport { get } from 'idb-keyval'\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport LoadingBar from \"../components/LoadingBar\";\r\nimport Badge from \"../components/Badge\";\r\n\r\nimport \"../assets/PokemonDetail.css\";\r\n\r\nconst MyPokemonDetail = () => {\r\n  const [detail, setDetail] = useState({})\r\n  const { name } = useParams();\r\n  get(name).then( (val) => {\r\n    setDetail(val)\r\n    console.log(\"TEST\")\r\n    console.log(val)\r\n  })\r\n\r\n  console.log('A')\r\n  console.log(detail)\r\n\r\n  return (\r\n    <>\r\n      <Navbar pageTitle={`Pokémon Detail - ${name}`} />\r\n      {/* {(detail.pokemon === undefined) && (\r\n        <div className=\"pokemon-detail\">\r\n          <LoadingBar />\r\n        </div>\r\n      )}\r\n      {!(detail.pokemon === undefined) && (\r\n        <>\r\n          <div className=\"pokemon-detail\">\r\n            <img\r\n              src={detail.pokemon.sprites.front_default}\r\n              alt={`${name} Profile`}\r\n            />\r\n            <div className=\"pokemon-detail__box\">\r\n              <p>{name}</p>\r\n              <div className=\"pokemon-detail__badges\">\r\n                {detail.pokemon.types.map((type, key) => {\r\n                  return (\r\n                    <Badge\r\n                      key={key}\r\n                      badgeText={type.type.name}\r\n                      tooltip=\"Pokémon Type\"\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"pokemon-detail__badges\">\r\n                {detail.pokemon.moves.map((move, key) => {\r\n                  return (\r\n                    <Badge\r\n                      key={key}\r\n                      badgeText={move.move.name}\r\n                      tooltip=\"Pokémon Move\"\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPokemonDetail;",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":33,"column":9,"nodeType":"64","messageId":"65","endLine":33,"endColumn":23},{"ruleId":"62","severity":1,"message":"66","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":18},{"ruleId":"62","severity":1,"message":"67","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":13},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'hideCatchModal' is assigned a value but never used.","Identifier","unusedVar","'LoadingBar' is defined but never used.","'Badge' is defined but never used.","no-global-assign","no-unsafe-negation"]